<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="FB_SlaveCtrlInstruAutoTest" Id="{c6a5bc39-42bd-40f5-8b75-8e4286e0c418}" SpecialFunc="None">
    <Declaration><![CDATA[// Brief: Slave Arm test
FUNCTION_BLOCK PUBLIC FB_SlaveCtrlInstruAutoTest EXTENDS FB_SlaveArmCtrlBase
VAR
											
	m_testStep :INT :=0;
				

	// final target DH joint position and grip angle
	m_targetDHJntPos:Vec3d;
	m_targetGripAng:LREAL;
	m_targetGripForceLevel :LREAL :=0;
	m_targetJntPos :Vec8d;
	
	// interploated command joint position and grip angle 
	m_cmdDHJntPos :Vec6d;
	m_cmdDHJntVel :Vec6d;
	m_cmdGripAng:LREAL;

	// last joint position 
	m_lastCmdJntPos :Vec8d ;
	
	// instrument controller
	m_instruController : FB_BasicInstruControl;
	m_usKnifeController : FB_UltrosonicKnifeControl;
	m_instruCmdJntPos,m_instruCmdJntVel : Vec5d;
	m_instruCmdJntTrq :Vec5d;
	
	// OTG
	m_DHJntOTG:ARRAY[1..3] OF FB_secOrdTrajFilter;
	m_gripAngleOTG : FB_secOrdTrajFilter;
	m_jntOTG :ARRAY [1..5] OF FB_secOrdTrajFilter;
	m_maxDHJntVel:Vec3d := [3(3*pi)];
	m_maxDHJntAcc:Vec3d := [3(10*pi)];
	m_maxJntVel:Vec5d := [5(1.57)];
	m_maxJntAcc:Vec5d := [5(3.14)];
	m_testCycles: INT := 0;
	m_instruTestMode: INT := 0;
	iStep: INT;
	m_instruPos: ARRAY [1..60, 1..5] OF LREAL;
	m_openCloseTest: ARRAY [1..60, 1..5] OF LREAL:=
	[0,		0-90,		0,				0,		0,	
	0,		0-90,		0,	     		15,		0,	
	0,		0-90,		0,				30,	    0,	
	0,		0-90,		0,				15,		0,
	0,		0-90,		0,				GVL_InstruTestUIVars.g_maxGripAngle,	    0,
	0,		0-90,		0,				30,	    0,
	0,		0-90,		0,				GVL_InstruTestUIVars.g_minGripAngle,	    100,
	0,		0-90,		0,				0,	    0,
	0,		0-90,		0,				0,	    0,
	0,		0-90,		0,				0,	    0,
	0,		0-90,		0,				0,	    0
	];
	iStep1: INT;
	iStep2: INT;
	m_targetGripAngLast: LREAL;
	m_armIdx:INT;
	m_openGripMoveTest: ARRAY [1..60, 1..5] OF LREAL:=
	[0,		0-90,		0,				0,		                                        0,	
	0,		0-90,		0,	     		GVL_InstruTestUIVars.g_maxGripAngle,		0,	
	0,		0-90,		0,				-90,		 									100,	
	0,		0-90,		60,				-90,											100,	
	0,		0-90,		60,				GVL_InstruTestUIVars.g_maxGripAngle,		0,	
	0,		0-90,		60,				-90,											100,
	0,		0-90,		-60,			-90,											100,
	0,		0-90,		-60,			GVL_InstruTestUIVars.g_maxGripAngle,		0,
	0,		0-90,		-60,			-90,											100,	
	0,		0-90,		0,				-90,											100,	
	0,		90-90,		0,				-90,											100,
	0,		90-90,		0,				GVL_InstruTestUIVars.g_maxGripAngle,		0,
	0,		90-90,		0,				-90,											100,
	0,		-90-90,	0,				-90,											100,
	0,		-90-90,	0,				GVL_InstruTestUIVars.g_maxGripAngle,		0,
	0,		-90-90,	0,				-90,											100,
	0,		0-90,		0,				-90,											100,
	0,		90-90,		60,				-90,											100,
	0,		90-90,		60,	     		GVL_InstruTestUIVars.g_maxGripAngle,		0,	
	0,		90-90,		60,				-90,		 									100,	
	0,		90-90,		-60,			-90,											100,	
	0,		90-90,		-60,			GVL_InstruTestUIVars.g_maxGripAngle,		0,	
	0,		90-90,		-60,			-90,											100,
	0,		-90-90,	-60,			-90,											100,
	0,		-90-90,	-60,			GVL_InstruTestUIVars.g_maxGripAngle,		0,
	0,		-90-90,	-60,			-90,											100,	
	0,		-90-90,	60,				-90,											100,	
	0,		-90-90,	60,				GVL_InstruTestUIVars.g_maxGripAngle,		0,
	0,		-90-90,	60,				-90,											100,
	0,		0-90,		0,				-90,											100,
	0,		0-90,		0,				GVL_InstruTestUIVars.g_maxGripAngle,		0,
	180,	0-90,		60,				GVL_InstruTestUIVars.g_maxGripAngle,		0,
	180,	0-90,		60,				-90,											100,
	180,	0-90,		60,				GVL_InstruTestUIVars.g_maxGripAngle,		0,
	180,	0-90,		-60,			GVL_InstruTestUIVars.g_maxGripAngle,		0,
	180,	0-90,		-60,			-90,											100,
	180,	0-90,		-60,			GVL_InstruTestUIVars.g_maxGripAngle,		0,
	180,	0-90,		0,				GVL_InstruTestUIVars.g_maxGripAngle,		0,
	180,	90-90,		0,				GVL_InstruTestUIVars.g_maxGripAngle,		0,
	180,	90-90,		0,				-90,											100,
	180,	90-90,		0,				GVL_InstruTestUIVars.g_maxGripAngle,		0,
	180,	-90-90,	0,				GVL_InstruTestUIVars.g_maxGripAngle,		0,
	180,	-90-90,	0,				-90,											100,
	180,	-90-90,	0,				GVL_InstruTestUIVars.g_maxGripAngle,		0,
	180,	0-90,		0,				GVL_InstruTestUIVars.g_maxGripAngle,		0,
	180,	90-90,		60,				GVL_InstruTestUIVars.g_maxGripAngle,		0,
	180,	90-90,		60,				-90,											100,
	180,	90-90,		60,				GVL_InstruTestUIVars.g_maxGripAngle,		0,
	180,	90-90,		-60,			GVL_InstruTestUIVars.g_maxGripAngle,		0,
	180,	90-90,		-60,			-90,											100,
	180,	90-90,		-60,			GVL_InstruTestUIVars.g_maxGripAngle,		0,
	180,	-90-90,	-60,			GVL_InstruTestUIVars.g_maxGripAngle,		0,
	180,	-90-90,	-60,			-90,											100,
	180,	-90-90,	-60,			GVL_InstruTestUIVars.g_maxGripAngle,		0,
	180,	-90-90,	60,				GVL_InstruTestUIVars.g_maxGripAngle,		0,
	180,	-90-90,	60,				-90,											100,
	180,	-90-90,	60,				GVL_InstruTestUIVars.g_maxGripAngle,		0,
	0,		0-90,		0,				0,												0,
	0,		0-90,		0,				0,												0,
	0,		0-90,		0,				0,												0
	];
	bstepMove: BOOL;
	fbTonAutoStep: TON;
	fbTime: FB_Timer;
	m_currentNotReached:BOOL;
	fbTonCurrentNotReached:TON;
	bStart: BOOL;
	m_openAngleInitCompensation:LREAL;
	m_GraspingForcepsTest: ARRAY [1..60, 1..5] OF LREAL:=
	[0,		0-90,		0,				0,		                                    0,	
	0,		0-90,		0,	     		GVL_InstruTestUIVars.g_maxGripAngle,		0,	
	0,		0-90,		0,				0,		 									0,	
	0,		0-90,		-60,			0,											0,	
	0,		0-90,		60,				0,											0,	
	0,		0-90,		0,				0,											0,
	0,		-60-90,	0,				0,											0,
	0,		60-90,		0,				0,											0,
	0,		0-90,		0,				0,											0,	
	180,	0-90,		0,				0,											0,	
	180,	0-90,		0,				GVL_InstruTestUIVars.g_maxGripAngle,		0,
	180,	0-90,		0,				0,											0,	
	180,	0-90,		-60,			0,											0,	
	180,	0-90,		60,			    0,											0,	
	180,	0-90,		0,				0,											0,	
	180,	-60-90,	0,				0,											0,	
	180,	60-90,		0,				0,											0,	
	  0,	0-90,		0,				0,											0,	
	-180,	0-90,		0,				0,											0,	 
	-180,	0-90,		0,				GVL_InstruTestUIVars.g_maxGripAngle,		0,	   
	-180,	0-90,		0,				0,											0,	 
	-180,	0-90,		-60,			0,											0,	   
	-180,	0-90,		60,				0,											0,	
	-180,	0-90,		0,				0,											0,	 
    -180,	-60-90,	0,				0,											0,	 
	-180,	60-90,		0,				0,											0,
	0,		0-90,		0,				0,											0,
	0,		0-90,		0,				0,											0,
	0,		0-90,		0,				0,		 										0,
	0,		0-90,		0,				0,		 										0
	];
	m_holdTheNeedleTest: ARRAY [1..60, 1..5] OF LREAL:=
	[0,		0-90,		0,				0,		                                        0,	
	0,		0-90,		0,	     		GVL_InstruTestUIVars.g_maxGripAngle,			0,	
	0,		0-90,		0,				-60,		 									100,	
	0,		0-90,		-60,			-60,											100,	
	0,		0-90,		60,				-60,											100,
	0,		0-90,		0,				-60,		 									100,	
	0,		-60-90,	0,				-60,		 									100,	
	0,		60-90,		0,				-60,		 									100,
	0,		0-90,		0,				-60,		 									100,
	180,	0-90,		0,				-60,		 									100,
	180,	0-90,		-60,			-60,		 									100,
	180,	0-90,		60,				-60,		 									100,
	180,	0-90,		0,				-60,		 									100,
	180,	-60-90,	0,				-60,		 									100,
	180,	60-90,		0,				-60,		 									100,
	180,	0-90,		0,				-60,		 									100,
	-180,	0-90,		0,				-60,		 									100,
	-180,	0-90,		-60,			-60,		 									100,
	-180,	0-90,		60,				-60,		 									100,
	-180,	0-90,		0,				-60,		 									100,
	-180,	-60-90,	0,				-60,		 									100,
	-180,	60-90,		0,				-60,		 									100,
	-180,	0-90,		0,				-60,		 									100,
	0,		0-90,		0,				0,		 										0,
	0,		0-90,		0,				0,		 										0,
	0,		0-90,		0,				0,		 										0,
	0,		0-90,		0,				0,		 										0
	];
	
	// instrument tyep
	m_instruType : E_InstrumentType;
	m_openGripMoveTestCautery: ARRAY [1..60, 1..5] OF LREAL:=
	[0,		0-90,		0,				0,		                                        0,	
	0,		0-90,		0,	     		GVL_InstruTestUIVars.g_maxGripAngle,		0,	
	0,		0-90,		0,				-90,		 									100,	
	0,		0-90,		60,				-90,											100,	
	0,		0-90,		60,				GVL_InstruTestUIVars.g_maxGripAngle,		0,	
	0,		0-90,		60,				-90,											100,
	0,		0-90,		-60,			-90,											100,
	0,		0-90,		-60,			GVL_InstruTestUIVars.g_maxGripAngle,		0,
	0,		0-90,		-60,			-90,											100,	
	0,		0-90,		0,				-90,											100,	
	0,		90-90-20,		0,				-90,											100,
	0,		90-90-20,		0,				GVL_InstruTestUIVars.g_maxGripAngle,		0,
	0,		90-90-20,		0,				-90,											100,
	0,		-90-90+20,	0,				-90,											100,
	0,		-90-90+20,	0,				GVL_InstruTestUIVars.g_maxGripAngle,		0,
	0,		-90-90+20,	0,				-90,											100,
	0,		0-90,		0,				-90,											100,
	0,		90-90-20,		60,				-90,											100,
	0,		90-90-20,		60,	     		GVL_InstruTestUIVars.g_maxGripAngle,		0,	
	0,		90-90-20,		60,				-90,		 									100,	
	0,		90-90-20,		-60,			-90,											100,	
	0,		90-90-20,		-60,			GVL_InstruTestUIVars.g_maxGripAngle,		0,	
	0,		90-90-20,		-60,			-90,											100,
	0,		-90-90+20,	-60,			-90,											100,
	0,		-90-90+20,	-60,			GVL_InstruTestUIVars.g_maxGripAngle,		0,
	0,		-90-90+20,	-60,			-90,											100,	
	0,		-90-90+20,	60,				-90,											100,	
	0,		-90-90+20,	60,				GVL_InstruTestUIVars.g_maxGripAngle,		0,
	0,		-90-90+20,	60,				-90,											100,
	0,		0-90,		0,				-90,											100,
	0,		0-90,		0,				GVL_InstruTestUIVars.g_maxGripAngle,		0,
	180,	0-90,		60,				GVL_InstruTestUIVars.g_maxGripAngle,		0,
	180,	0-90,		60,				-90,											100,
	180,	0-90,		60,				GVL_InstruTestUIVars.g_maxGripAngle,		0,
	180,	0-90,		-60,			GVL_InstruTestUIVars.g_maxGripAngle,		0,
	180,	0-90,		-60,			-90,											100,
	180,	0-90,		-60,			GVL_InstruTestUIVars.g_maxGripAngle,		0,
	180,	0-90,		0,				GVL_InstruTestUIVars.g_maxGripAngle,		0,
	180,	90-90-20,		0,				GVL_InstruTestUIVars.g_maxGripAngle,		0,
	180,	90-90-20,		0,				-90,											100,
	180,	90-90-20,		0,				GVL_InstruTestUIVars.g_maxGripAngle,		0,
	180,	-90-90+20,	0,				GVL_InstruTestUIVars.g_maxGripAngle,		0,
	180,	-90-90+20,	0,				-90,											100,
	180,	-90-90+20,	0,				GVL_InstruTestUIVars.g_maxGripAngle,		0,
	180,	0-90,		0,				GVL_InstruTestUIVars.g_maxGripAngle,		0,
	180,	90-90-20,		60,				GVL_InstruTestUIVars.g_maxGripAngle,		0,
	180,	90-90-20,		60,				-90,											100,
	180,	90-90-20,		60,				GVL_InstruTestUIVars.g_maxGripAngle,		0,
	180,	90-90-20,		-60,			GVL_InstruTestUIVars.g_maxGripAngle,		0,
	180,	90-90-20,		-60,			-90,											100,
	180,	90-90-20,		-60,			GVL_InstruTestUIVars.g_maxGripAngle,		0,
	180,	-90-90+20,	-60,			GVL_InstruTestUIVars.g_maxGripAngle,		0,
	180,	-90-90+20,	-60,			-90,											100,
	180,	-90-90+20,	-60,			GVL_InstruTestUIVars.g_maxGripAngle,		0,
	180,	-90-90+20,	60,				GVL_InstruTestUIVars.g_maxGripAngle,		0,
	180,	-90-90+20,	60,				-90,											100,
	180,	-90-90+20,	60,				GVL_InstruTestUIVars.g_maxGripAngle,		0,
	0,		0-90,		0,				0,												0,
	0,		0-90,		0,				0,												0,
	0,		0-90,		0,				0,												0
	];
	m_setTestCycles: INT;
	m_openGripMoveTestMode: ARRAY [1..60, 1..5] OF LREAL:=
	[0,		0-90,		0,				0,		                                        0,	
	0,		0-90,		0,	     		GVL_InstruTestUIVars.g_maxGripAngle,		0,	
	0,		0-90,		0,				-90,		 									100,	
	0,		0-90,		60,				-90,											100,	
	0,		0-90,		60,				GVL_InstruTestUIVars.g_maxGripAngle,		0,	
	0,		0-90,		60,				-90,											100,
	0,		0-90,		-60,			-90,											100,
	0,		0-90,		-60,			GVL_InstruTestUIVars.g_maxGripAngle,		0,
	0,		0-90,		-60,			-90,											100,	
	0,		0-90,		0,				-90,											100,	
	0,		90-90,		0,				-90,											100,
	0,		90-90,		0,				GVL_InstruTestUIVars.g_maxGripAngle,		0,
	0,		90-90,		0,				-90,											100,
	0,		-90-90,	0,				-90,											100,
	0,		-90-90,	0,				GVL_InstruTestUIVars.g_maxGripAngle,		0,
	0,		-90-90,	0,				-90,											100,
	0,		0-90,		0,				-90,											100,
	0,		90-90,		60,				-90,											100,
	0,		90-90,		60,	     		GVL_InstruTestUIVars.g_maxGripAngle,		0,	
	0,		90-90,		60,				-90,		 									100,	
	0,		90-90,		-60,			-90,											100,	
	0,		90-90,		-60,			GVL_InstruTestUIVars.g_maxGripAngle,		0,	
	0,		90-90,		-60,			-90,											100,
	0,		-90-90,	-60,			-90,											100,
	0,		-90-90,	-60,			GVL_InstruTestUIVars.g_maxGripAngle,		0,
	0,		-90-90,	-60,			-90,											100,	
	0,		-90-90,	60,				-90,											100,	
	0,		-90-90,	60,				GVL_InstruTestUIVars.g_maxGripAngle,		0,
	0,		-90-90,	60,				-90,											100,
	0,		0-90,		0,				-90,											100,
	0,		0-90,		0,				GVL_InstruTestUIVars.g_maxGripAngle,		0,
	180,	0-90,		60,				GVL_InstruTestUIVars.g_maxGripAngle,		0,
	180,	0-90,		60,				-90,											100,
	180,	0-90,		60,				GVL_InstruTestUIVars.g_maxGripAngle,		0,
	180,	0-90,		-60,			GVL_InstruTestUIVars.g_maxGripAngle,		0,
	180,	0-90,		-60,			-90,											100,
	180,	0-90,		-60,			GVL_InstruTestUIVars.g_maxGripAngle,		0,
	180,	0-90,		0,				GVL_InstruTestUIVars.g_maxGripAngle,		0,
	180,	90-90,		0,				GVL_InstruTestUIVars.g_maxGripAngle,		0,
	180,	90-90,		0,				-90,											100,
	180,	90-90,		0,				GVL_InstruTestUIVars.g_maxGripAngle,		0,
	180,	-90-90,	0,				GVL_InstruTestUIVars.g_maxGripAngle,		0,
	180,	-90-90,	0,				-90,											100,
	180,	-90-90,	0,				GVL_InstruTestUIVars.g_maxGripAngle,		0,
	180,	0-90,		0,				GVL_InstruTestUIVars.g_maxGripAngle,		0,
	180,	90-90,		60,				GVL_InstruTestUIVars.g_maxGripAngle,		0,
	180,	90-90,		60,				-90,											100,
	180,	90-90,		60,				GVL_InstruTestUIVars.g_maxGripAngle,		0,
	180,	90-90,		-60,			GVL_InstruTestUIVars.g_maxGripAngle,		0,
	180,	90-90,		-60,			-90,											100,
	180,	90-90,		-60,			GVL_InstruTestUIVars.g_maxGripAngle,		0,
	180,	-90-90,	-60,			GVL_InstruTestUIVars.g_maxGripAngle,		0,
	180,	-90-90,	-60,			-90,											100,
	180,	-90-90,	-60,			GVL_InstruTestUIVars.g_maxGripAngle,		0,
	180,	-90-90,	60,				GVL_InstruTestUIVars.g_maxGripAngle,		0,
	180,	-90-90,	60,				-90,											100,
	180,	-90-90,	60,				GVL_InstruTestUIVars.g_maxGripAngle,		0,
	0,		0-90,		0,				0,												0,
	0,		0-90,		0,				0,												0,
	0,		0-90,		0,				0,												0
	];
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="calcCmdJntPos" Id="{15d4c773-9cf7-4ecc-b07e-f075688ff968}">
      <Declaration><![CDATA[METHOD PROTECTED calcCmdJntPos : BOOL
VAR_IN_OUT CONSTANT
	i_endoscopePose : ST_Frame;
	i_masterStatus :ST_MasterStatus;
	i_setupStatus: ST_SetupStatus;
	i_slaveArm :FB_SlaveArm;
END_VAR

VAR 
	i:INT :=0;

END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[GVL_InstruTestUIVars.g_curTestCycles:=m_testCycles;
IF GVL_InstruTestUIVars.g_autoTestStart THEN 
	bStart:=TRUE;
	GVL_InstruTestUIVars.g_autoTestStart:=FALSE;
END_IF
IF GVL_InstruTestUIVars.g_autoTestStop THEN 
	m_isFinished := TRUE;
	GVL_InstruTestUIVars.g_autoTestStop:=FALSE;
END_IF
IF bStart AND NOT GVL_InstruTestUIVars.g_autoTestPause THEN 
	instruTestMode(i_slaveArm);
END_IF
(*
IF ABS( m_targetGripAngLast-m_targetGripAng)>0.0001  THEN
  IF  m_targetGripAngLast-m_targetGripAng<0.0001   THEN
	  m_targetGripAng:=m_targetGripAng+m_openAngleInitCompensation*g_deg2rad;
  ELSE
	  m_targetGripAng:=m_targetGripAng;
  END_IF                       
END_IF
m_targetGripAngLast:=m_targetGripAng;
*)
//CurrentDetection
IF GVL_InstruTestUIVars.g_funcCurrentDetection THEN	
	IF ABS (i_slaveArm.filtJntCurrent[1] -GVL_InstruTestUIVars.g_actualRatedCurrent[4])>5 AND 
	   ABS (i_slaveArm.filtJntCurrent[2] -GVL_InstruTestUIVars.g_actualRatedCurrent[4])>5 THEN
		m_currentNotReached:=FALSE;
	ELSE 
		m_currentNotReached:=TRUE;
	END_IF	
	fbTonCurrentNotReached(IN:= m_currentNotReached, PT:= T#60S, Q=> , ET=> );
	
	IF fbTonCurrentNotReached.Q THEN
		m_isFinished := TRUE;
		m_currentNotReached:=FALSE;
	END_IF
END_IF
//TIME
fbTime.timer(bStart:=TRUE,uiTimeHour=>GVL_InstruTestUIVars.g_testTimeHour,
					uiTimeMinute=>GVL_InstruTestUIVars.g_testTimeMinute,
					uiTimeSecond=>GVL_InstruTestUIVars.g_testTimeSecond);
// run OTG
FOR i:=1 TO 3  DO
	m_DHJntOTG[i].run(m_targetDHJntPos[i],0.0, o_cmdAcc=>,o_cmdVel=>m_cmdDHJntVel[i],o_cmdPos=> m_cmdDHJntPos[i+3]);
END_FOR
m_gripAngleOTG.run(m_targetGripAng,0.0, o_cmdAcc=>,o_cmdVel=>,o_cmdPos=>m_cmdGripAng);
//FOR i:=1 TO 3  DO
//	m_cmdDHJntPos[i+3] := m_targetDHJntPos[i];
//	m_cmdGripAng := m_targetGripAng;
//END_FOR

// calculate target motor joint position from DH joint position
i_slaveArm.instrument.instruIK(m_cmdDHJntPos,m_cmdGripAng, o_jntPos=>m_cmdJntPos);
//FOR i:=1 TO 5 DO
//	m_jntOTG[i].run(m_targetJntPos[i+3],0.0, o_cmdAcc=>,o_cmdVel=>m_cmdJntVel[i+3],o_cmdPos=> m_cmdJntPos[i+3]);
//END_FOR


// command velocity
vecSub(m_cmdJntPos, m_lastCmdJntPos, m_cmdJntVel);
vecSelfMultiNum(m_cmdJntVel, g_slaveArmCtrlFreq);
m_lastCmdJntPos:=m_cmdJntPos;]]></ST>
      </Implementation>
    </Method>
    <Method Name="calcCmdJntTrq" Id="{76e1ba1c-db60-4056-a7dd-094639cd5bfd}">
      <Declaration><![CDATA[// override this function in each exact controller
METHOD PROTECTED calcCmdJntTrq : BOOL
VAR_IN_OUT CONSTANT
	i_endoscopePose : ST_Frame;
	i_masterStatus :ST_MasterStatus;
	i_setupStatus: ST_SetupStatus;
	i_slaveArm :FB_SlaveArm;
END_VAR

VAR 
	nullspaceMat :Mat7d;
	ctrlTrq : Vec7d;
	i : int ;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// set joint torque to zero in default
m_cmdJntTrq := g_zeroVec8d;

// instrument joint control
FOR i:=1 TO 5 DO 
	m_instruCmdJntPos[i]:=m_cmdJntPos[i+3];
	m_instruCmdJntVel[i]:=m_cmdJntVel[i+3];
END_FOR

IF i_slaveArm.instrument.instruType = InstruType_UltrasoundKnifeS OR i_slaveArm.instrument.instruType = InstruType_UltrasoundKnifeU THEN
	m_usKnifeController.run(m_instruCmdJntPos,m_instruCmdJntVel, m_targetGripForceLevel, i_slaveArm, o_cmdJntTrq=>m_instruCmdJntTrq);
ELSE
	m_instruController.run(m_instruCmdJntPos,m_instruCmdJntVel, m_cmdDHJntPos[6], m_cmdDHJntVel[6], m_targetGripForceLevel, i_slaveArm, o_cmdJntTrq=>m_instruCmdJntTrq);
END_IF

FOR i:=1 TO 5 DO
	m_cmdJntTrq[i+3]:=m_instruCmdJntTrq[i];
END_FOR
]]></ST>
      </Implementation>
    </Method>
    <Property Name="getTestMode" Id="{aa60accd-f2ad-4581-b9e5-d755173daddd}">
      <Declaration><![CDATA[PROPERTY getTestMode : INT]]></Declaration>
      <Get Name="Get" Id="{f9e24140-4e33-4cb8-bfe8-4a01895ad395}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[getTestMode:=m_instruTestMode;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="init" Id="{8975c5ab-2817-4d36-b9d6-a56b68f9ddff}">
      <Declaration><![CDATA[METHOD PUBLIC init : BOOL
VAR_IN_OUT CONSTANT
	i_slaveArm	:FB_SlaveArm;
END_VAR
VAR_IN_OUT 
	r_slaveArmCtrlCmd :ST_SlaveArmCtrlCmds;
END_VAR

VAR
	i:int;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[SUPER^.Init(i_slaveArm,r_slaveArmCtrlCmd);
m_lastCmdJntPos:=m_cmdJntPos;
IF GVL_InstruTestUIVars.g_testMode=3 THEN
	m_jntOPMode[1] := DriverOPMode_PosTrq;
	m_jntOPMode[2] := DriverOPMode_PosTrq;
	m_jntOPMode[3] := DriverOPMode_PosTrq;
	m_jntOPMode[4] := DriverOPMode_Pos;
	m_jntOPMode[5] := DriverOPMode_Pos;
	m_jntOPMode[6] := DriverOPMode_Pos;
	m_jntOPMode[7] := DriverOPMode_Pos;
	m_jntOPMode[8] := DriverOPMode_Pos;
ELSE
	m_jntOPMode[1] := DriverOPMode_PosTrq;
	m_jntOPMode[2] := DriverOPMode_PosTrq;
	m_jntOPMode[3] := DriverOPMode_PosTrq;
	m_jntOPMode[4] := DriverOPMode_PosTrq;
	m_jntOPMode[5] := DriverOPMode_PosTrq;
	m_jntOPMode[6] := DriverOPMode_PosTrq;
	m_jntOPMode[7] := DriverOPMode_PosTrq;
	m_jntOPMode[8] := DriverOPMode_PosTrq;
END_IF
m_armIdx:=i_slaveArm.armIdx;
fbTime.init();
GVL_InstruTestUIVars.g_autoTestStart:=FALSE;
GVL_InstruTestUIVars.g_autoTestStop:=FALSE;
bStart:=FALSE;
IF GVL_InstruTestUIVars.g_testCycles=0 THEN
	GVL_InstruTestUIVars.g_testCycles:=1;
END_IF
m_instruTestMode := GVL_InstruTestUIVars.g_testMode;  //m_isSingleFinger
IF m_instruTestMode=2 OR m_instruTestMode=3  THEN
	IF i_slaveArm.instrument.onChipData.m_InstruReadSucceed AND i_slaveArm.m_instrument.instruTypeInfo.m_isSingleFinger  THEN
		m_instruTestMode := GVL_InstruTestUIVars.g_testMode+10;
	END_IF
END_IF
m_testStep := 0;
m_testCycles := 1;
m_cmdDHJntPos :=i_slaveArm.curDHJntPos;
m_cmdDHJntVel :=g_zeroVec6d;
m_targetGripAng := i_slaveArm.curGripAngle;
m_targetDHJntPos[1] := i_slaveArm.curDHJntPos[4];
m_targetDHJntPos[2] := i_slaveArm.curDHJntPos[5];
m_targetDHJntPos[3] := i_slaveArm.curDHJntPos[6];


// init instrument controller
m_instruController.init(i_slaveArm);
m_usKnifeController.init(i_slaveArm);
m_instruType := i_slaveArm.instrument.instruType;

FOR i:=1 TO 3  DO
	m_DHJntOTG[i].init(m_cmdDHJntPos[i+3], 0, m_maxDHJntVel[i], m_maxDHJntAcc[i], g_slaveArmCtrlCycleTime);
END_FOR

m_gripAngleOTG.init(m_targetGripAng, 0, m_maxDHJntVel[1], m_maxDHJntAcc[1], g_slaveArmCtrlCycleTime);

FOR i := 1 TO 5 DO
	m_targetJntPos[i] := i_slaveArm.curJntPos[i];
	m_jntOTG[i].init(m_cmdJntPos[i+3], 0, m_maxJntVel[i], m_maxJntAcc[i], g_slaveArmCtrlCycleTime);
END_FOR
// update commands to arm
copyCmds(r_slaveArmCtrlCmd);


iStep:=5;]]></ST>
      </Implementation>
    </Method>
    <Property Name="InstruBacklash" Id="{cda5b4d7-fef1-403c-be51-323c2e3d0278}">
      <Declaration><![CDATA[PROPERTY InstruBacklash : Vec5d]]></Declaration>
      <Get Name="Get" Id="{23671507-d0de-43a0-b66e-ae0df3fdb828}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[IF m_instruType = InstruType_UltrasoundKnifeS OR m_instruType = InstruType_UltrasoundKnifeU THEN
	instruBacklash := g_zeroVec5d;
ELSE
	instruBacklash := m_instruController.m_jntBacklash;
END_IF]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="instruTestMode" Id="{3b2bf015-ae09-4fed-93fe-0fadbf87904e}">
      <Declaration><![CDATA[METHOD instruTestMode : BOOL
VAR_IN_OUT CONSTANT
	i_slaveArm :FB_SlaveArm;
END_VAR
VAR
	i:INT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE m_instruTestMode OF
	1:
		m_testStep := LIMIT(0,m_testStep, 9);
		m_instruPos:=m_openCloseTest;
		iStep1:=7;
		iStep2:=6;
		m_setTestCycles:=GVL_InstruTestUIVars.g_testCycles;
	2:
		m_testStep := LIMIT(0,m_testStep, 60);
		m_instruPos:=m_openGripMoveTest;
		iStep1:=58;
		iStep2:=57;
		m_setTestCycles:=GVL_InstruTestUIVars.g_testCycles;
	3:
		m_testStep := LIMIT(0,m_testStep, 60);
		m_instruPos:=m_openGripMoveTestMode;
		iStep1:=58;
		iStep2:=57;
		m_setTestCycles:=GVL_InstruTestUIVars.g_testCycles;
	4:
		m_testStep := LIMIT(0,m_testStep, 29);
		m_instruPos:=m_GraspingForcepsTest;
		iStep1:=27;
		iStep2:=26;
		m_setTestCycles:=1;
	5:
		m_testStep := LIMIT(0,m_testStep, 26);
		m_instruPos:=m_holdTheNeedleTest;
		iStep1:=24;
		iStep2:=23;
		m_setTestCycles:=1;
	12:
		m_testStep := LIMIT(0,m_testStep, 60);
		m_instruPos:=m_openGripMoveTestCautery;
		iStep1:=58;
		iStep2:=57;
		m_setTestCycles:=GVL_InstruTestUIVars.g_testCycles;

	13:
		m_testStep := LIMIT(0,m_testStep, 60);
		m_instruPos:=m_openGripMoveTestCautery;
		iStep1:=58;
		iStep2:=57;
		m_setTestCycles:=GVL_InstruTestUIVars.g_testCycles;
	ELSE
		RETURN;
END_CASE
bstepMove:=TRUE;
fbTonAutoStep(IN:=iStep=15 , PT:= T#0.1S, Q=> , ET=> );
GVL_InstruTestUIVars.g_testStep:=m_testStep+1;
CASE iStep OF
	0:;
	5:  
		FOR i:=1 TO 3 BY 1 DO
			m_targetDHJntPos[i] := m_instruPos[m_testStep+1, i]*g_deg2rad;
		END_FOR
		m_targetGripAng := m_instruPos[m_testStep+1, 4]*g_deg2rad;
		m_targetGripForceLevel:=m_instruPos[m_testStep+1, 5];
		IF m_instruTestMode=12 OR m_instruTestMode=13 THEN
			m_targetGripAng :=0;
			m_targetGripForceLevel:=0;
		END_IF
		bstepMove:=FALSE;
		iStep:=10;
	10: 
		IF ABS(m_cmdDHJntPos[4]-m_targetDHJntPos[1])< g_jntCtrlAngTolLow 
		AND ABS(m_cmdDHJntPos[5]-m_targetDHJntPos[2])< g_jntCtrlAngTolLow 	
		AND ABS(m_cmdDHJntPos[6]-m_targetDHJntPos[3])< g_jntCtrlAngTolLow 
		AND ABS(m_cmdGripAng- m_targetGripAng)< g_jntCtrlAngTolLow 
		AND bstepMove  THEN
		    iStep:=15;
	    END_IF
	15: 
	    IF fbTonAutoStep.Q THEN
	    	iStep:=20;
	    END_IF
	20: 
		m_testStep:=m_testStep+1;
		iStep:=5;
		IF m_testStep =iStep1 THEN
			m_testCycles:=m_testCycles+1;
			m_testStep := 0;
		END_IF

		IF m_testCycles>=m_setTestCycles+1 THEN
			m_testCycles:=m_testCycles-1;
			iStep:=25;
		END_IF

	25: 
	    m_testStep:=iStep2+1;
		FOR i:=1 TO 3 BY 1 DO
			m_targetDHJntPos[i] := m_instruPos[m_testStep+1, i]*g_deg2rad;
		END_FOR
        m_targetGripAng := m_instruPos[m_testStep+1, 4]*g_deg2rad;
        m_targetGripForceLevel:=m_instruPos[m_testStep+1, 5];
//		m_testStep:=iStep2+2;
		iStep:=30;
    30: IF ABS(m_cmdDHJntPos[4]-m_targetDHJntPos[1])< g_jntCtrlAngTolLow 
		AND ABS(m_cmdDHJntPos[5]-m_targetDHJntPos[2])< g_jntCtrlAngTolLow 
		AND ABS(m_cmdDHJntPos[6]-m_targetDHJntPos[3])< g_jntCtrlAngTolLow 
		AND ABS(m_cmdGripAng- m_targetGripAng)< g_jntCtrlAngTolLow THEN
		    iStep:=35;
	    END_IF
	35: 
	    m_isFinished := TRUE;
		iStep:=0;
END_CASE]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_SlaveCtrlInstruAutoTest">
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="FB_SlaveCtrlInstruAutoTest.calcCmdJntPos">
      <LineId Id="468" Count="0" />
      <LineId Id="536" Count="1" />
      <LineId Id="545" Count="0" />
      <LineId Id="538" Count="0" />
      <LineId Id="540" Count="1" />
      <LineId Id="546" Count="0" />
      <LineId Id="539" Count="0" />
      <LineId Id="543" Count="1" />
      <LineId Id="542" Count="0" />
      <LineId Id="559" Count="0" />
      <LineId Id="470" Count="7" />
      <LineId Id="560" Count="0" />
      <LineId Id="517" Count="0" />
      <LineId Id="520" Count="1" />
      <LineId Id="533" Count="0" />
      <LineId Id="522" Count="6" />
      <LineId Id="534" Count="0" />
      <LineId Id="530" Count="0" />
      <LineId Id="532" Count="0" />
      <LineId Id="518" Count="0" />
      <LineId Id="488" Count="0" />
      <LineId Id="513" Count="1" />
      <LineId Id="516" Count="0" />
      <LineId Id="489" Count="4" />
      <LineId Id="574" Count="2" />
      <LineId Id="573" Count="0" />
      <LineId Id="494" Count="2" />
      <LineId Id="578" Count="2" />
      <LineId Id="577" Count="0" />
      <LineId Id="497" Count="3" />
      <LineId Id="131" Count="0" />
    </LineIds>
    <LineIds Name="FB_SlaveCtrlInstruAutoTest.calcCmdJntTrq">
      <LineId Id="121" Count="0" />
      <LineId Id="34" Count="1" />
      <LineId Id="135" Count="0" />
      <LineId Id="137" Count="1" />
      <LineId Id="161" Count="0" />
      <LineId Id="139" Count="0" />
      <LineId Id="195" Count="4" />
      <LineId Id="141" Count="0" />
      <LineId Id="200" Count="0" />
      <LineId Id="142" Count="2" />
      <LineId Id="177" Count="0" />
    </LineIds>
    <LineIds Name="FB_SlaveCtrlInstruAutoTest.getTestMode.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_SlaveCtrlInstruAutoTest.init">
      <LineId Id="13" Count="0" />
      <LineId Id="101" Count="0" />
      <LineId Id="301" Count="0" />
      <LineId Id="86" Count="6" />
      <LineId Id="19" Count="0" />
      <LineId Id="302" Count="0" />
      <LineId Id="305" Count="6" />
      <LineId Id="303" Count="1" />
      <LineId Id="207" Count="0" />
      <LineId Id="226" Count="3" />
      <LineId Id="206" Count="0" />
      <LineId Id="256" Count="1" />
      <LineId Id="281" Count="1" />
      <LineId Id="222" Count="0" />
      <LineId Id="188" Count="0" />
      <LineId Id="221" Count="0" />
      <LineId Id="283" Count="0" />
      <LineId Id="120" Count="0" />
      <LineId Id="202" Count="0" />
      <LineId Id="84" Count="1" />
      <LineId Id="93" Count="0" />
      <LineId Id="175" Count="1" />
      <LineId Id="231" Count="0" />
      <LineId Id="299" Count="0" />
      <LineId Id="81" Count="2" />
      <LineId Id="162" Count="0" />
      <LineId Id="269" Count="0" />
      <LineId Id="148" Count="0" />
      <LineId Id="128" Count="0" />
      <LineId Id="149" Count="1" />
      <LineId Id="110" Count="0" />
      <LineId Id="136" Count="0" />
      <LineId Id="296" Count="0" />
      <LineId Id="295" Count="0" />
      <LineId Id="300" Count="0" />
      <LineId Id="297" Count="1" />
      <LineId Id="111" Count="0" />
      <LineId Id="109" Count="0" />
      <LineId Id="80" Count="0" />
      <LineId Id="59" Count="0" />
      <LineId Id="12" Count="0" />
    </LineIds>
    <LineIds Name="FB_SlaveCtrlInstruAutoTest.InstruBacklash.Get">
      <LineId Id="3" Count="3" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_SlaveCtrlInstruAutoTest.instruTestMode">
      <LineId Id="166" Count="1" />
      <LineId Id="175" Count="0" />
      <LineId Id="168" Count="0" />
      <LineId Id="185" Count="0" />
      <LineId Id="184" Count="0" />
      <LineId Id="289" Count="0" />
      <LineId Id="169" Count="1" />
      <LineId Id="174" Count="0" />
      <LineId Id="181" Count="1" />
      <LineId Id="290" Count="0" />
      <LineId Id="332" Count="4" />
      <LineId Id="331" Count="0" />
      <LineId Id="263" Count="3" />
      <LineId Id="262" Count="0" />
      <LineId Id="292" Count="0" />
      <LineId Id="268" Count="3" />
      <LineId Id="267" Count="0" />
      <LineId Id="293" Count="0" />
      <LineId Id="279" Count="3" />
      <LineId Id="278" Count="0" />
      <LineId Id="294" Count="0" />
      <LineId Id="301" Count="0" />
      <LineId Id="314" Count="4" />
      <LineId Id="313" Count="0" />
      <LineId Id="171" Count="1" />
      <LineId Id="164" Count="0" />
      <LineId Id="229" Count="1" />
      <LineId Id="96" Count="0" />
      <LineId Id="101" Count="2" />
      <LineId Id="211" Count="0" />
      <LineId Id="210" Count="0" />
      <LineId Id="212" Count="0" />
      <LineId Id="105" Count="1" />
      <LineId Id="343" Count="1" />
      <LineId Id="346" Count="0" />
      <LineId Id="345" Count="0" />
      <LineId Id="231" Count="0" />
      <LineId Id="107" Count="0" />
      <LineId Id="224" Count="0" />
      <LineId Id="233" Count="2" />
      <LineId Id="225" Count="2" />
      <LineId Id="223" Count="0" />
      <LineId Id="237" Count="2" />
      <LineId Id="236" Count="0" />
      <LineId Id="118" Count="0" />
      <LineId Id="250" Count="0" />
      <LineId Id="120" Count="0" />
      <LineId Id="122" Count="1" />
      <LineId Id="186" Count="0" />
      <LineId Id="124" Count="0" />
      <LineId Id="131" Count="1" />
      <LineId Id="187" Count="0" />
      <LineId Id="133" Count="4" />
      <LineId Id="241" Count="1" />
      <LineId Id="240" Count="0" />
      <LineId Id="139" Count="2" />
      <LineId Id="177" Count="1" />
      <LineId Id="243" Count="1" />
      <LineId Id="179" Count="1" />
      <LineId Id="146" Count="1" />
      <LineId Id="151" Count="0" />
      <LineId Id="149" Count="0" />
      <LineId Id="97" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>