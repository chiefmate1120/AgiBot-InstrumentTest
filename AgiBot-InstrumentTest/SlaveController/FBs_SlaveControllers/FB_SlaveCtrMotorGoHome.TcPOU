<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="FB_SlaveCtrMotorGoHome" Id="{191676e4-5b14-4884-a6d2-527a7e09e82d}" SpecialFunc="None">
    <Declaration><![CDATA[// Brief: Mounting Panel
FUNCTION_BLOCK PUBLIC FB_SlaveCtrMotorGoHome EXTENDS FB_SlaveArmCtrlBase
VAR
	// motorGoHomeStatus
	m_motorGoHomeStatus :INT := 0;
	
	// mount motion planning
	m_jntOTG :ARRAY[1..5] OF FB_secOrdTrajFilter;
	m_motorGoHomeVel :LREAL := 2*pi;
	m_motorGoHomeAcc :LREAL := 4*pi;
	m_targetHomePos :Vec5d;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="calcCmdJntPos" Id="{68429c58-bd25-4c56-9550-ade2e5572a31}">
      <Declaration><![CDATA[// override this function in each exact controller
METHOD PROTECTED calcCmdJntPos : BOOL
VAR_IN_OUT CONSTANT
	i_endoscopePose : ST_Frame;
	i_masterStatus :ST_MasterStatus;
	i_setupStatus: ST_SetupStatus;
	i_slaveArm :FB_SlaveArm;
END_VAR

VAR 
	i :INT;
	curJntPos :Vec8d;
	cycleNum :LREAL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[
curJntPos := i_slaveArm.curJntPos;

CASE m_motorGoHomeStatus OF
	
	// determine zero position 
	0:
		FOR i:=1 TO 5 DO
			cycleNum := FLOOR(curJntPos[i+3]/g_2pi);
			m_targetHomePos[i]:=cycleNum* g_2Pi;
		END_FOR
		m_motorGoHomeStatus :=1;
	
	// move back to zero position
	1:
		m_isFinished:=TRUE;
		FOR i:=1 TO 5 DO
			IF ABS(m_targetHomePos[i]-curJntPos[i+3])>GVL_SlaveControlParameters.g_jntCtrlAngTolHigh THEN
				m_isFinished:=FALSE;
				EXIT;
			END_IF
		END_FOR
END_CASE


FOR i:=1 TO 5 DO
	m_jntOTG[i].run(m_targetHomePos[i],0.0, o_cmdAcc=>m_cmdJntAcc[3+i],o_cmdVel=>m_cmdJntVel[3+i],o_cmdPos=>m_cmdJntPos[i+3]);
END_FOR
]]></ST>
      </Implementation>
    </Method>
    <Method Name="init" Id="{d82ff825-50d3-4155-8bbe-fb44a1de304b}">
      <Declaration><![CDATA[METHOD PUBLIC init : BOOL
VAR_IN_OUT CONSTANT
	i_slaveArm	:FB_SlaveArm;
END_VAR
VAR_IN_OUT 
	r_slaveArmCtrlCmd :ST_SlaveArmCtrlCmds;
END_VAR
VAR
	i : INT;
END_VAR

]]></Declaration>
      <Implementation>
        <ST><![CDATA[SUPER^.Init(i_slaveArm,r_slaveArmCtrlCmd);//T
m_jntOPMode[4] := DriverOPMode_Pos;
m_jntOPMode[5] := DriverOPMode_Pos;
m_jntOPMode[6] := DriverOPMode_Pos;
m_jntOPMode[7] := DriverOPMode_Pos;
m_jntOPMode[8] := DriverOPMode_Pos;

m_motorGoHomeStatus:=0;
FOR i:=1 TO 5 DO
	m_targetHomePos[i]:=m_cmdJntPos[i+3];
	m_jntOTG[i].init(m_targetHomePos[i], 0,m_motorGoHomeVel, m_motorGoHomeAcc, g_slaveArmCtrlCycleTime);
END_FOR

// update commands to arm
copyCmds(r_slaveArmCtrlCmd);
]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_SlaveCtrMotorGoHome">
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="FB_SlaveCtrMotorGoHome.calcCmdJntPos">
      <LineId Id="228" Count="2" />
      <LineId Id="144" Count="0" />
      <LineId Id="176" Count="3" />
      <LineId Id="234" Count="0" />
      <LineId Id="236" Count="0" />
      <LineId Id="181" Count="4" />
      <LineId Id="246" Count="0" />
      <LineId Id="240" Count="1" />
      <LineId Id="243" Count="0" />
      <LineId Id="245" Count="0" />
      <LineId Id="244" Count="0" />
      <LineId Id="242" Count="0" />
      <LineId Id="156" Count="0" />
      <LineId Id="118" Count="0" />
      <LineId Id="33" Count="0" />
      <LineId Id="146" Count="2" />
      <LineId Id="150" Count="0" />
    </LineIds>
    <LineIds Name="FB_SlaveCtrMotorGoHome.init">
      <LineId Id="57" Count="0" />
      <LineId Id="99" Count="2" />
      <LineId Id="58" Count="0" />
      <LineId Id="114" Count="0" />
      <LineId Id="102" Count="0" />
      <LineId Id="69" Count="0" />
      <LineId Id="68" Count="0" />
      <LineId Id="75" Count="0" />
      <LineId Id="87" Count="0" />
      <LineId Id="71" Count="0" />
      <LineId Id="127" Count="1" />
      <LineId Id="126" Count="0" />
      <LineId Id="12" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>